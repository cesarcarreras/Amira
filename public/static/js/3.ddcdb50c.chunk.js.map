{"version":3,"sources":["assets/images/banner2.png","assets/images/background-products.jpg","UnauthApp/views/Home/index.js","UnauthApp/views/Checkout/index.js","UnauthApp/views/Login/index.js","UnauthApp/views/Signup/index.js","UnauthApp/views/Products/index.js","UnauthApp/views/ConfirmPayment/index.js","UnauthApp/views/OrderStatus/index.js","UnauthApp/Routes.js"],"names":["module","exports","Home","bgImage","bgPicture","Checkout","useState","JSON","parse","localStorage","getItem","cartItems","user","setUser","setOrder","itemsPrice","reduce","acc","current","price","qty","taxPrice","shippingPrice","totalPrice","isOpen","setIsOpen","onClose","window","location","reload","cancelRef","useRef","toast","useToast","name","useInput","lastName","email","birthday","address","phone","history","useHistory","loading","setLoading","handleCreateUser","e","a","preventDefault","data","value","handleAsync","createUserEP","Orderdata","iva","toFixed","total","_user","_id","_products","createOrderEP","order","setItem","stringify","position","title","status","duration","setTimeout","description","isClosable","inputs","placeholder","type","labelName","control","alignItems","direction","backgroundColor","mt","className","color","justify","w","h","leastDestructiveRef","size","fontSize","fontWeight","textAlign","onClick","ref","overflow","boxShadow","p","borderRadius","id","deleteUserEP","removeItem","undefined","actionButton","alignContent","map","item","m","key","src","img","ml","mb","push","mr","Login","props","useAuth","dispatch","password","handleLogin","loginEP","payload","icon","as","d","justifyContent","boxSizing","buttonText","Signup","role","handleSignup","signupEP","console","log","Products","setCartItems","products","setProducts","countCartItems","length","useEffect","allProductsEP","then","catch","err","onAdd","product","newCart","exist","find","x","updatedCartQTY","addQTY","obj","o","onload","promoToast","isActive","onRemove","removeAll","colorScheme","wrap","ConfirmPayment","oneUser","orderDetailEP","py","maxW","bg","useColorModeValue","rounded","alt","pos","fontFamily","px","align","flexDirection","spacing","href","flex","_focus","_hover","OrderStatus","orderNumber","handleSubmit","trackOrderEP","orderFound","minH","my","lineHeight","base","md","input","index","focusBorderColor","variant","_placeholder","isLoading","Logo","UnauthApp","exact","path","component","NotFound","to"],"mappings":"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","file":"static/js/3.ddcdb50c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/banner2.486f65a4.png\";","module.exports = __webpack_public_path__ + \"static/media/background-products.ebd9ca96.jpg\";","import React from 'react'\nimport {Banner, Navbar, Featured, Footer, Newsletter, Header} from '@components'\nimport bgPicture from '@assets/images/banner2.png'\n\nconst Home = () => {\n\n\n    return(\n        <>\n            <Header />\n            <Navbar/>\n            <Banner\n                bgImage={bgPicture}\n            />\n            <Featured/>\n            <Newsletter/>\n            <Footer/>\n        </>\n    )\n}\n\nexport default Home","import React, { useState, useRef } from 'react'\nimport { Avatar, Box, Flex, Spacer, Text, useToast, AlertDialog,\n   Button,\n   AlertDialogBody,\n   AlertDialogFooter,\n   AlertDialogHeader,\n   AlertDialogContent,\n   AlertDialogOverlay,\n   Heading,} from '@chakra-ui/react'\nimport { useHistory } from 'react-router-dom';\nimport { SignupForm, Paypal } from '@components';\nimport handleAsync from '@utils/handleAsync.js';\nimport useInput from '@hooks/useInput.js';\nimport { deleteUserEP, createUserEP } from '@services/user-ws';\nimport { createOrderEP } from '@services/order-ws';\n\nexport default function Checkout(){\n\n   const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || [])\n   const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"userLocal\")))\n   const [order, setOrder] = useState(JSON.parse(localStorage.getItem(\"orderLocal\")) || [])\n\n   const itemsPrice = cartItems.reduce((acc, current) => acc + current.price * current.qty, 0);\n   const taxPrice = itemsPrice * 0.16;\n   const shippingPrice = itemsPrice > 500 ? 0 : 59.99;\n   const totalPrice = itemsPrice + taxPrice + shippingPrice;\n\n   const [isOpen, setIsOpen] = useState(false)\n   const onClose = () => {\n      window.location.reload();\n      setIsOpen(false)\n   }\n   const cancelRef = useRef()\n\n   const toast = useToast()\n\n   const name = useInput('')\n   const lastName = useInput('')\n   const email = useInput('')\n   const birthday = useInput('')\n   const address = useInput('')\n   const phone = useInput('')\n\n   const history = useHistory()\n\n   const [loading, setLoading] = useState(false)\n\n   const handleCreateUser = async e => {\n      e.preventDefault()\n      setLoading(true)\n      const data = {\n          name: name.value,\n          lastName: lastName.value,\n          email: email.value,\n          birthday: birthday.value,\n          address: address.value,\n          phone: phone.value,\n      }\n\n      const user = await handleAsync(() => createUserEP(data))\n\n      const Orderdata = {\n         iva: taxPrice.toFixed(2),\n         shippingPrice: shippingPrice.toFixed(2),\n         total: totalPrice.toFixed(2),\n         _user: user._id,\n         _products: cartItems,\n     }\n\n      const order = await handleAsync(() => createOrderEP(Orderdata))\n\n      setOrder(order)\n      if(order){\n         localStorage.setItem(\"orderLocal\", JSON.stringify(order))\n      }\n\n      setUser(user)\n      if(user){\n         localStorage.setItem(\"userLocal\", JSON.stringify([user]))\n          toast({\n              position: 'top-right',\n              title: \"Cuenta creada correctamente\",\n              status: 'success',\n              duration: 3000,\n          })\n          setLoading(false)\n          setTimeout(() => {\n               setIsOpen(true)\n          }, 1000)\n\n      }else{\n          toast({\n              position: 'top-right',\n              title: \"Error\",\n              description: \"Algo salió mal\",\n              status: 'error',\n              duration: 3000,\n              isClosable: true\n          })\n          setLoading(false)\n      }\n  };\n\n  const handleDelete = (id) => {\n   deleteUserEP(id)\n   localStorage.removeItem(\"userLocal\")\n   setUser(undefined)\n  }\n\n  const handleMP = () => {\n\n   toast({\n      position: 'top-right',\n      title: \"¡Muy pronto!\",\n      description: \"Estamos trabajando en ello, pronto estará disponible 😉 \",\n      status: 'info',\n      duration: 5000,\n      isClosable: true\n  })\n\n  }\n\n   const inputs = [\n      {\n          placeholder : 'James',\n          type: 'text',\n          labelName: 'Nombre',\n          control: {...name}\n      },\n      {\n          placeholder : 'Bond',\n          type: 'text',\n          labelName: 'Apellido',\n          control: {...lastName}\n      },\n      {\n          placeholder : 'James@bond.com',\n          type: 'email',\n          labelName: 'Correo',\n          control: {...email}\n      },\n      {\n         placeholder : 'Dirección Completa',\n         type: 'email',\n         labelName: 'Correo',\n         control: {...address}\n     },\n      {\n          placeholder : 'Teléfono',\n          type: 'number',\n          labelName: 'Número de teléfono',\n          control: {...phone}\n      },\n      {\n          placeholder : 'Fecha de Nacimiento',\n          type: 'date',\n          labelName: 'Fecha de Nacimiento',\n          control: {...birthday}\n      }\n   ]\n\n   return(\n      <Flex alignItems=\"center\" direction=\"column\" backgroundColor=\"coral.100\" >\n\n      <Flex mt=\"50px\">\n      <Heading className=\"header-font\" color=\"#fbf6f7\">¡Registrate para continuar con tu compra!</Heading>\n      </Flex>\n      <Flex justify=\"center\" alignItems=\"center\" w=\"100%\" h=\"100vh\" mt=\"-50px\">\n           <AlertDialog\n               isOpen={isOpen}\n               leastDestructiveRef={cancelRef}\n               onClose={onClose}\n               size={\"2xl\"}\n               >\n               <AlertDialogOverlay>\n                  <AlertDialogContent>\n                     <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\" textAlign=\"center\">\n                     ¿Cómo te gustaría Pagar?\n                     </AlertDialogHeader>\n\n                     <AlertDialogBody>\n                     <Flex justify=\"space-around\" alignItems=\"center\" >\n                     <Button onClick={handleMP}>\n                        MercadoPago\n                     </Button>\n\n                      <Paypal/>\n\n                     </Flex>\n\n                     </AlertDialogBody>\n\n                     <AlertDialogFooter>\n                     <Button ref={cancelRef} onClick={onClose}>\n                        Cancelar\n                     </Button>\n                     </AlertDialogFooter>\n                  </AlertDialogContent>\n               </AlertDialogOverlay>\n               </AlertDialog>\n\n\n\n\n         <Box w=\"80vw\" h=\"70vh\" overflow=\"hidden\" backgroundColor=\"#fbf6f7\" boxShadow=\"2xl\" p=\"6\" borderRadius=\"60px\">\n         <Flex>\n\n         <Box w=\"50%\" h=\"70vh\" borderRadius=\"lg\" overflow=\"hidden\" borderRadius=\"30px\">\n       { user ?\n       <>\n         <Heading>¡Hola, {user[0]?.name}!</Heading>\n         <Flex direction=\"column\">\n           <Text> ¿Tus datos son correctos?</Text>\n           <Text> Correo: {user[0]?.email} </Text>\n           <Text> Dirección: {user[0]?.address} </Text>\n           <Text> Número de Telefono: {user[0]?.phone} </Text>\n         </Flex>\n\n         <Flex mt={20}>\n             <Text>¿Algún dato es incorrecto?</Text><Button onClick={() => handleDelete(user[0]._id)} >Editar</Button>\n         </Flex>\n\n         <Flex mt={20}>\n             <Text>¿Falló el pago?, !Intentalo nuevamente!</Text><Button onClick={() => setIsOpen(true)}>Pagar</Button>\n         </Flex>\n         </>\n       :\n          <SignupForm  inputs={inputs} actionButton={handleCreateUser} loading={loading}/>\n       }\n\n         </Box>\n\n            <Flex direction=\"column\" w=\"40%\">\n               <Box w=\"100%\" h=\"250px\"  overflow=\"scroll\" >\n                  <Flex direction=\"row\" justify=\"center\" alignItems=\"center\" alignContent=\"center\">\n                  {cartItems.map((item) => (\n                     <Box w=\"100%\" m=\"10px\" key={item._id} className=\"header-font\">\n                        <Flex justify=\"center\" alignContent=\"space-around\" direction=\"column\" >\n                              <Avatar w=\"100px\" h=\"80px\" src={item.img} size=\"2xl\"/>\n                           <Flex direction=\"column\" ml=\"40px\" mt=\"20px\">\n                              <Text >{item.title}</Text>\n                              <Text> cantidad: {item.qty} ${item.price}</Text>\n                           </Flex>\n                        </Flex>\n                     </Box>\n                  ))}\n                  </Flex>\n                  </Box>\n                  <Button className=\"header-font\" w=\"180px\" mb=\"40px\" ml=\"30%\" borderRadius=\"50px\" onClick={() => history.push('/products')} backgroundColor=\"#fefdfe\" boxShadow=\"2xl\" p=\"6\" >Añadir productos</Button>\n                 <Box w=\"100%\" h=\"150px\" backgroundColor=\"blue.100\" color=\"white\" borderRadius=\"30px\" className=\"header-font\">\n\n                        <Flex ml=\"30px\" mr=\"30px\" mt=\"10px\">\n                           <Text>Total Productos</Text>\n                           <Spacer/>\n                           <Text>${itemsPrice.toFixed(2)}</Text>\n                        </Flex>\n\n                        <Flex ml=\"30px\" mr=\"30px\">\n                           <Text>IVA 16%</Text>\n                           <Spacer/>\n                           <Text>${taxPrice.toFixed(2)}</Text>\n                        </Flex>\n\n                        <Flex ml=\"30px\" mr=\"30px\" mb=\"15px\">\n                           <Text>Envío</Text>\n                           <Spacer/>\n                           <Text>${shippingPrice.toFixed(2)}</Text>\n                        </Flex>\n                         <hr/>\n                        <Flex ml=\"30px\" mr=\"30px\" mt=\"10px\">\n                           <Text fontWeight=\"bold\">Total</Text>\n                           <Spacer/>\n                           <Text fontWeight=\"bold\">${totalPrice.toFixed(2)}</Text>\n                        </Flex>\n                  </Box>\n               </Flex>\n         </Flex>\n         </Box>\n      </Flex>\n      </Flex>\n   )\n}","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {AuthForm} from '@components';\nimport useInput from '@hooks/useInput.js';\nimport {Box, useToast} from '@chakra-ui/react';\nimport { useAuth } from '@utils/AuthContext.js';\nimport handleAsync from '@utils/handleAsync.js';\nimport { loginEP } from '@services/auth-ws.js';\n\nexport default function Login(props){\n    const toast = useToast()\n    const [, dispatch] = useAuth()\n    const history = useHistory()\n\n    const email = useInput('')\n    const password = useInput('')\n\n    const [loading, setLoading] = useState(false)\n\n    const handleLogin = async e => {\n        e.preventDefault()\n        setLoading(true)\n\n        const data = {\n            email: email.value,\n            password: password.value\n        }\n\n        const {user} = await handleAsync(() => loginEP(data))\n\n        setLoading(false)\n        if(user){\n            dispatch({type: 'LOGIN', payload: {user}})\n            toast({\n                position: 'top-right',\n                title: \"Login exitoso\",\n                status: 'success',\n                duration: 3000,\n            })\n            setLoading(false)\n            setTimeout(() => {\n                history.push('/dashboard/home')\n            }, 1000)\n        }else{\n            toast({\n                position: 'top-right',\n                title: \"No autorizado\",\n                description: \"Correo o contraseña incorrecta\",\n                status: 'error',\n                duration: 3000,\n                isClosable: true\n            })\n        }\n    };\n\n\n\n    const inputs = [\n\n        {\n            placeholder : 'James@bond.com',\n            type: 'email',\n            icon: 'user',\n            labelName: 'Correo',\n            control: {...email}\n        },\n        {\n            placeholder : '* * * * * * * * ',\n            type: 'password',\n            icon: 'pwd',\n            labelName: 'Contraseña',\n            control: {...password}\n        }\n    ]\n\n    return(\n        <Box\n            as=\"main\"\n            d=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            boxSizing=\"border-box\"\n            w=\"100%\"\n            h=\"85vh\"\n        >\n            <AuthForm\n            title={'Iniciar Sesión'}\n            buttonText={'Entrar'}\n            inputs={inputs}\n            actionButton={handleLogin}\n            loading={loading}\n            />\n    </Box>\n    )\n};","import React, {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {AuthForm} from '@components';\nimport {Box, useToast} from '@chakra-ui/react';\nimport handleAsync from '@utils/handleAsync.js';\nimport useInput from '@hooks/useInput.js';\nimport { signupEP } from '@services/auth-ws.js';\n\nexport default function Signup(props){\n    const toast = useToast()\n\n    const name = useInput('')\n    const lastName = useInput('')\n    const email = useInput('')\n    const address = useInput('')\n    const password = useInput('')\n    const birthday = useInput('')\n    const role = useInput('USER')\n\n    const history = useHistory()\n\n    const [loading, setLoading] = useState(false)\n\n    const handleSignup = async e => {\n        e.preventDefault()\n        setLoading(true)\n        const data = {\n            name: name.value,\n            lastName: lastName.value,\n            email: email.value,\n            password: password.value,\n            birthday: birthday.value,\n            address: address.value,\n            role: role.value\n        }\n\n        const {user} = await handleAsync(() => signupEP(data))\n\n        console.log(user)\n        if(user){\n            toast({\n                position: 'top-right',\n                title: \"Cuenta creada correctamente\",\n                status: 'success',\n                duration: 3000,\n            })\n            setLoading(false)\n            setTimeout(() => {\n                history.push('/dashboard/home')\n            }, 1000)\n\n        }else{\n            toast({\n                position: 'top-right',\n                title: \"Error\",\n                description: \"Algo salió mal\",\n                status: 'error',\n                duration: 3000,\n                isClosable: true\n            })\n            setLoading(false)\n        }\n    };\n\n    const inputs = [\n        {\n            placeholder : 'James',\n            type: 'text',\n            icon: 'user',\n            labelName: 'Nombre',\n            control: {...name}\n        },\n        {\n            placeholder : 'Bond',\n            type: 'text',\n            icon: 'user',\n            labelName: 'Apellido',\n            control: {...lastName}\n        },\n        {\n            placeholder : 'James@bond.com',\n            type: 'email',\n            icon: 'user',\n            labelName: 'Correo',\n            control: {...email}\n        },\n        {\n            placeholder : '* * * * * * * * ',\n            type: 'password',\n            icon: 'pwd',\n            labelName: 'Contraseña',\n            control: {...password}\n        },\n        {\n            placeholder : 'Fecha de Nacimiento',\n            type: 'date',\n            labelName: 'Fecha de Nacimiento',\n            control: {...birthday}\n        },\n\n    ]\n    return(\n        <Box\n            as=\"main\"\n            d=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            boxSizing=\"border-box\"\n            w=\"100%\"\n            h=\"85vh\"\n        >\n            <AuthForm\n            title={'Registrarse'}\n            buttonText={'Entrar'}\n            inputs={inputs}\n            actionButton={handleSignup}\n            loading={loading}\n            />\n        </Box>\n    )\n}","import React, {useEffect, useState} from 'react'\nimport {allProductsEP} from '@services/product-ws'\nimport { Footer, Navbar, Newsletter, ProductBanner, ProductCard, ShopCart, Header} from '@components'\nimport { Badge, Box, Flex, useToast } from '@chakra-ui/react'\nimport bgPicture from '@assets/images/background-products.jpg'\n\n\nexport default function Products() {\n\n    const toast = useToast()\n\n    const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || [])\n\n    const [products, setProducts] = useState([])\n\n    let countCartItems = cartItems.length\n\n    useEffect(() => {\n        allProductsEP()\n        .then(({data}) => setProducts([...data.products]))\n        .catch(err => console.log(err))\n    }, [])\n\n    const onAdd = (product) => {\n        toast({\n            position: 'top-right',\n            title: \"Producto añadido al carrito\",\n            status: 'success',\n            duration: 1000,\n        })\n        if(localStorage.getItem(\"cartItems\")){\n            let newCart = JSON.parse(localStorage.getItem(\"cartItems\"))\n            const exist = newCart.find( x => x._id === product._id)\n            if(exist){\n                let updatedCartQTY = []\n                let addQTY = newCart.find(x => x._id === exist._id)\n                addQTY.qty = addQTY.qty + 1\n                updatedCartQTY.push(addQTY)\n                newCart = newCart.map(obj => updatedCartQTY.find(o => o._id === obj._id) || obj);\n                localStorage.removeItem(\"cartItems\")\n                countCartItems++\n                localStorage.setItem(\"cartItems\", JSON.stringify(newCart))\n                setCartItems(newCart)\n            } else {\n                newCart.push({...product, qty : 1})\n                localStorage.setItem(\"cartItems\", JSON.stringify(newCart))\n                setCartItems(newCart)\n            }\n        } else {\n            localStorage.setItem(\"cartItems\", JSON.stringify([{...product, qty: 1}]))\n            setCartItems([{...product, qty: 1}])\n        }\n    }\n    const id = \"promot-toast\"\n\n    window.onload = () => promoToast()\n\n    const promoToast = () => {\n\n        if(!toast.isActive(id)) {\n            toast({\n                position: 'top-right',\n                title: \"Aprovecha envío gratis en compras superiores a $500 MXN \",\n                status: 'info',\n                duration: 8000,\n                isClosable: true,\n            })\n        }\n    }\n\n\n\n    const onRemove = (product) => {\n        localStorage.removeItem(\"cartItems\")\n        setCartItems([])\n        toast({\n            position: 'top-right',\n            title: \"Carrito se vació correctamente\",\n            status: 'success',\n            duration: 2000,\n        })\n    }\n\n    const removeAll = () => {\n        localStorage.removeItem(\"cartItems\")\n        setCartItems([])\n        toast({\n            position: 'top-right',\n            title: \"Carrito se vació correctamente\",\n            status: 'success',\n            duration: 2000,\n        })\n    }\n\n\n    return (\n        <>\n        <Navbar/>\n             <Flex justify=\"flex-end\" mr=\"45%\">\n            <ShopCart onAdd={onAdd} onRemove={onRemove} removeAll={removeAll} cartItems={cartItems} countCartItems={cartItems.length}/>\n            <Box ml=\"6px\" >\n            {countCartItems ? (\n                <Badge colorScheme=\"red\" color=\"white\" borderRadius=\"full\" w=\"16px\" >{countCartItems}</Badge>\n            ) : ('')}\n            </Box>\n            </Flex>\n\n            <ProductBanner bgImage={bgPicture} />\n\n            <Flex p={6} m=\"10px\" wrap=\"wrap\" justifyContent=\"space-around\" alignItems=\"center\" alignContent=\"center\">\n            { products.map(product => {\n                return <ProductCard\n                    key={product._id}\n                    product={product}\n                    onAdd={onAdd}\n                    onRemove={onRemove}\n                />\n              })}\n              </Flex>\n            <Newsletter/>\n            <Footer/>\n        </>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport { Heading,\n    Flex,\n    Spacer,\n    Avatar,\n    Box,\n    Center,\n    Text,\n    Stack,\n    Button,\n    useColorModeValue,} from '@chakra-ui/react'\nimport { orderDetailEP } from '@services/order-ws'\nimport { oneUser } from '@services/user-ws'\n\nexport default function ConfirmPayment() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"userLocal\")) || [])\n    const [order, setOrder] = useState(JSON.parse(localStorage.getItem(\"orderLocal\")))\n    const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || [])\n\n    useEffect(() => {\n        oneUser(user[0]._id)\n        .then(user => setUser(user.data.user))\n        .catch(err => console.log(err))\n    }, [])\n\n\n    useEffect(() => {\n        orderDetailEP(order)\n        .then(order => setOrder(order.data.order._id))\n        .catch(err => console.log(err))\n    }, [])\n\n\n\n    return (\n        <>\n <Center py={6}>\n      <Box\n        maxW={'550px'}\n        w={'full'}\n        bg={useColorModeValue('white', 'gray.900')}\n        boxShadow={'2xl'}\n        rounded={'lg'}\n        p={6}\n        textAlign={'center'}>\n        <Avatar\n          size={'xl'}\n          src={\n              'https://icons-for-free.com/iconfiles/png/512/complete+done+green+success+valid+icon-1320183462969251652.png'\n          }\n          alt={'Avatar Alt'}\n          mb={4}\n          pos={'relative'}\n        />\n        <Heading fontSize={'2xl'} fontFamily={'body'}>\n        ¡Muchas gracias por tu compra, {user?.name}!\n        </Heading>\n        <Text fontWeight={400} color={'gray.500'} mb={4}>\n          En breve recibirás un correo de confirmación\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={useColorModeValue('gray.700', 'gray.400')}\n          px={3}>\n          Nombre: {user?.name}\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={useColorModeValue('gray.700', 'gray.400')}\n          px={3}>\n          Correo: {user?.email}\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={useColorModeValue('gray.700', 'gray.400')}\n          px={3}>\n          Dirección de Entrega: {user?.address}\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={useColorModeValue('gray.700', 'gray.400')}\n          px={3}>\n          A continuación encontrarás un resumen de tu pedido:\n        </Text>\n\n        <Stack align={'center'} justify={'center'} direction={'row'} mt={6}>\n\n          {cartItems.map(item => (\n            <Box flexDirection='row' overflow=\"scroll\" key={item._id}>\n              <Avatar src={item.img[0]} />\n                <Text>{item.title}</Text>\n                <Text> Cantidad:{item.qty} ${item.price}</Text>\n                </Box>\n            ))}\n        </Stack>\n\n        <Flex ml=\"30px\" mr=\"30px\" mt=\"30px\">\n            <Text>IVA 16%</Text>\n            <Spacer/>\n            <Text>${order?.iva}</Text>\n        </Flex>\n\n        <Flex ml=\"30px\" mr=\"30px\">\n            <Text>Envío</Text>\n            <Spacer/>\n            <Text>${order?.shippingPrice}</Text>\n        </Flex>\n\n        <Flex ml=\"30px\" mr=\"30px\">\n            <Text>Total</Text>\n            <Spacer/>\n            <Text>${order?.total}</Text>\n        </Flex>\n\n        <Stack mt={8} direction={'row'} spacing={4}>\n          <Button\n           as=\"a\"\n            href=\"/products\"\n            flex={1}\n            fontSize={'sm'}\n            rounded={'full'}\n            _focus={{\n              bg: 'gray.200',\n            }}>\n            Seguir Comprando\n          </Button>\n          <Button\n            as=\"a\"\n            href=\"/order-status\"\n            flex={1}\n            fontSize={'sm'}\n            rounded={'full'}\n            bg={'blue.400'}\n            color={'white'}\n            boxShadow={\n              '0px 1px 25px -5px rgb(66 153 225 / 48%), 0 10px 10px -5px rgb(66 153 225 / 43%)'\n            }\n            _hover={{\n              bg: 'blue.500',\n            }}\n            _focus={{\n              bg: 'blue.500',\n            }}>\n            Estado de mi pedido\n          </Button>\n        </Stack>\n      </Box>\n    </Center>\n        </>\n     )\n};","\nimport React, {useState} from 'react'\nimport {\n    Button,\n    FormControl,\n    Flex,\n    Heading,\n    Input,\n    Stack,\n    Text,\n    Box,\n    Center,\n    Tooltip,\n    Avatar,\n    Spacer,\n    useToast} from '@chakra-ui/react'\nimport { trackOrderEP } from '@services/order-ws'\nimport useInput from '@hooks/useInput.js';\nimport handleAsync from '@utils/handleAsync.js';\n\nimport Logo from '@assets/images/logo.png'\n\nexport default function OrderStatus() {\n\n    const [orderFound, setOrderfound] = useState([])\n    const [order, setOrder] = useState(JSON.parse(localStorage.getItem(\"orderLocal\")) || [])\n    const [cartItems, setCartItems] = useState(JSON.parse(localStorage.getItem(\"cartItems\")) || [])\n\n    const [loading, setLoading] = useState(false)\n    const toast = useToast()\n\n    const orderNumber = useInput('')\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        setLoading(true)\n\n        const orderFound = await handleAsync(() => trackOrderEP(orderNumber.value))\n        console.log(\"Si se encontró\", orderFound)\n\n        if(orderFound){\n            toast({\n                position: 'top-right',\n                title: \"Pedido encontrado\",\n                status: 'success',\n                duration: 3000,\n            })\n            setTimeout(() => {\n                window.location.reload();\n                setLoading(false)\n            }, 3000)\n        } else{\n            toast({\n                position: 'top-right',\n                title: \"Pedido no encontrado\",\n                description: \"Revisa nuevamente el número de Pedido\",\n                status: 'error',\n                duration: 3000,\n                isClosable: true\n            })\n            setLoading(false)\n        }\n    }\n\n    const inputs = [\n        {\n            placeholder : 'ID******',\n            type: 'text',\n            control: {...orderNumber}\n        }\n    ]\n\n    return (\n        <>\n       {order === [] || undefined || null ?\n       <Flex\n      minH={'100vh'}\n      align={'center'}\n      justify={'center'}\n      bg={'gray.50'}>\n      <Stack\n        spacing={4}\n        w={'full'}\n        maxW={'md'}\n        bg={'white'}\n        rounded={'xl'}\n        boxShadow={'lg'}\n        p={6}\n        my={12}>\n        <Heading lineHeight={1.1} fontSize={{ base: '2xl', md: '3xl' }} className=\"header-font\">\n          Introduce el número de pedido:\n        </Heading>\n        <FormControl id={orderNumber}>\n            {inputs.map((input, index) => (\n                <Box key={index}>\n            <Input\n                {...input.control}\n                type={input.type}\n                color=\"gray.500\"\n                focusBorderColor=\"blue.500\"\n                placeholder={input.placeholder}\n                mb={5}\n                variant=\"flushed\"\n                _placeholder={{ color: 'gray.500' }}\n            />\n            </Box>\n            ))}\n        </FormControl>\n            <Stack spacing={6}>\n            <Button\n                isLoading={loading}\n                onClick={handleSubmit}\n               className=\"header-font\"\n                bg={'blue.400'}\n                color={'white'}\n                _hover={{\n                bg: 'blue.500',\n                }}>\n                Ver estado de pedido\n            </Button>\n            </Stack>\n            <Text\n            className=\"body-font\"\n          fontSize=\"sm\"\n          color={'gray.400'}>\n          Tú número de pedido lo encuentras en tu correo de confirmación. Si no lo conoces, por favor contactanos a hola@amirasoap.com\n        </Text>\n      </Stack>\n    </Flex>\n\n    :\n\n <Center p=\"10%\">\n      <Box\n        maxW={'550px'}\n        w={'full'}\n        bg={'white'}\n        boxShadow={'2xl'}\n        rounded={'lg'}\n        p={6}\n        textAlign={'center'}>\n        <Avatar\n          size={'3xl'}\n          src={Logo}\n          alt={'Logo Alt'}\n          mb={4}\n          pos={'full'}\n          backgroundColor=\"white\"\n        />\n        <Heading fontSize={'2xl'} fontFamily={'body'} className=\"header-font\" mb={4}>\n        ¡Hola, {order?._user.name}!\n        </Heading>\n        <Text fontWeight={400} color={'gray.500'} mb={4}>\n          ¡Gracias por confiar en nosotros!\n        </Text>\n\n        <Text fontWeight={400} color={'gray.500'} mb={4}>\n          A continuación encontrarás el estado de tu pedido:\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={'gray.400'}\n          px={3}>\n          Estado del pedido: {order?.status}\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={'gray.400'}\n          px={3}>\n          Correo: {order?._user.email}\n        </Text>\n\n        <Text\n          textAlign={'center'}\n          color={'gray.400'}\n          px={3}>\n          Dirección de Entrega: {order?._user.address}\n        </Text>\n\n\n\n        <Stack align={'center'} justify={'center'} direction={'row'} mt={8}>\n\n        {cartItems.map(item => (\n            <Box flexDirection='row' overflow=\"scroll\" key={item._id}>\n              <Avatar src={item.img[0]} />\n                <Text> {item.title}</Text>\n                <Text textAlign={'center'} color={'gray.400'}px={3}>\n                        Cantidad:{item.qty} ${item.price}\n                </Text>\n                </Box>\n            ))}\n        </Stack>\n\n        <Flex ml=\"30px\" mr=\"30px\" mt=\"30px\">\n            <Text>IVA 16%</Text>\n            <Spacer/>\n            <Text>${order.iva}</Text>\n        </Flex>\n\n        <Flex ml=\"30px\" mr=\"30px\">\n            <Text>Envío</Text>\n            <Spacer/>\n            <Text>${order.shippingPrice}</Text>\n        </Flex>\n\n        <Flex ml=\"30px\" mr=\"30px\">\n            <Text>Total</Text>\n            <Spacer/>\n            <Text>${order.total}</Text>\n        </Flex>\n\n        <Stack mt={8} direction={'row'} spacing={4}>\n          <Button\n            as=\"a\"\n            href='/products'\n            flex={1}\n            fontSize={'sm'}\n            rounded={'full'}\n            colorScheme=\"blue\"\n            _hover={{\n                colorScheme: 'teal',\n            }}>\n            Ver mas productos\n          </Button>\n        </Stack>\n      </Box>\n    </Center>\n    }\n       </>\n    )\n}","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport {Home, Login, Signup, Checkout, Products, ConfirmPayment, OrderStatus} from './views';\nimport { NotFound } from '@components';\n\nfunction UnauthApp(){\n    return(\n        <Switch>\n            <Route exact path= \"/login\" component={Login}/>\n            <Route exact path= \"/signup\" component={Signup}/>\n            <Route exact path= \"/products\" component={Products}/>\n            <Route exact path= \"/checkout\" component={Checkout}/>\n            <Route exact path= \"/payment-confirmation\" component={ConfirmPayment}/>\n            <Route exact path= \"/order-status\" component={OrderStatus}/>\n            <Route exact path= \"/404\" component={NotFound}/>\n            <Route exact path= \"/\" component={Home}/>\n            <Redirect to=\"/404\"/>\n        </Switch>\n    )\n};\n\nexport default UnauthApp;"],"sourceRoot":""}